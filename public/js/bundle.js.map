{
  "version": 3,
  "sources": ["mapbox.js", "alerts.js", "login.js", "updateSettings.js", "stripe.js", "index.js"],
  "sourcesContent": ["export const displayMap = (locations) => {\n  mapboxgl.accessToken =\n    'pk.eyJ1IjoidmljdG9ybXJmOCIsImEiOiJjbTRkcnBiNWgwMzBzMmtwejA5b2owOWdyIn0.zLL2t5utzZJzlOTcfNuL8Q';\n\n  var map = new mapboxgl.Map({\n    container: 'map',\n    style: 'mapbox://styles/mapbox/light-v10',\n    scrollZoom: false,\n  });\n\n  const bounds = new mapboxgl.LngLatBounds();\n\n  locations.forEach((loc) => {\n    // Create marker\n    const el = document.createElement('div');\n    el.className = 'marker';\n\n    // Add marker\n    new mapboxgl.Marker({\n      element: el,\n      anchor: 'bottom',\n    })\n      .setLngLat(loc.coordinates)\n      .addTo(map);\n\n    // Add popup\n    new mapboxgl.Popup({\n      offset: 30,\n    })\n      .setLngLat(loc.coordinates)\n      .setHTML(`<p>Day ${loc.day}: ${loc.description}</p>`)\n      .addTo(map);\n\n    // Extends map bounds to include current location\n    bounds.extend(loc.coordinates);\n  });\n\n  map.fitBounds(bounds, {\n    padding: {\n      top: 200,\n      bottom: 150,\n      left: 100,\n      right: 100,\n    },\n  });\n};\n", "export const hideAlert = () => {\n  const el = document.querySelector('.alert');\n  if (el) el.parentElement.removeChild(el);\n};\n\n// type is 'success' or 'error'\nexport const showAlert = (type, msg) => {\n  hideAlert();\n  const markup = `<div class=\"alert alert--${type}\">${msg}</div>`;\n  document.querySelector('body').insertAdjacentHTML('afterbegin', markup);\n  window.setTimeout(hideAlert, 5000);\n};\n", "import { showAlert } from './alerts';\n\nexport const login = async (email, password) => {\n  try {\n    const res = await axios({\n      method: 'POST',\n      url: '/api/v1/users/login',\n      data: {\n        email,\n        password,\n      },\n    });\n\n    if (res.data.status === 'success') {\n      showAlert('success', 'Logged in successfully');\n      window.setTimeout(() => {\n        location.assign('/');\n      }, 1500);\n    }\n  } catch (err) {\n    showAlert('error', err.response.data.message);\n  }\n};\n\nexport const logout = async () => {\n  try {\n    const res = await axios({\n      method: 'GET',\n      url: '/api/v1/users/logout',\n    });\n\n    if (res.data.status === 'success') {\n      location.reload(true);\n    }\n  } catch (err) {\n    showAlert('error', 'Error logging out! Try again');\n  }\n};\n", "import { showAlert } from './alerts';\n\n// type is either data or password\nexport const updateSettings = async (data, type) => {\n  try {\n    const url =\n      type === 'password'\n        ? '/api/v1/users/updateMyPassword'\n        : '/api/v1/users/updateMe';\n\n    const res = await axios({\n      method: 'PATCH',\n      url,\n      data,\n    });\n\n    if (res.data.status === 'success') {\n      showAlert('success', `${type.toUpperCase()} updated successfully!`);\n    }\n  } catch (err) {\n    showAlert('error', err.response.data.message);\n  }\n};\n", "import { showAlert } from './alerts';\n\nexport const bookTour = async (tourId) => {\n  try {\n    const stripe = Stripe(\n      'pk_test_51QSuWUDuHI9lwyv3UCS5WnJTos77QaKSKTqOv3j97NzvU579iHtfTa2DuZG8AJfO6U3dLrl2XyAIp9Td9UgRtNu600Wy2g29BL',\n    );\n    // 1) Get the session from the server to the client side from API\n    const session = await axios(`/api/v1/bookings/checkout-session/${tourId}`);\n    // 2) Use the stripe object to create checkout form + charge the credit card\n    await stripe.redirectToCheckout({\n      sessionId: session.data.session.id,\n    });\n  } catch (err) {\n    console.log(err);\n    showAlert('error', err);\n  }\n};\n", "import { displayMap } from './mapbox';\nimport { login, logout } from './login';\nimport { updateSettings } from './updateSettings';\nimport { bookTour } from './stripe';\n\n// DOM ELEMENTS\nconst mapBox = document.getElementById('map');\nconst loginForm = document.querySelector('.form--login');\nconst logOutBtn = document.querySelector('.nav__el--logout');\nconst userDataForm = document.querySelector('.form-user-data');\nconst userPasswordForm = document.querySelector('.form-user-password');\nconst bookBtn = document.getElementById('book-tour');\n\n// DELEGATION\nif (mapBox) {\n  const locations = JSON.parse(mapBox.dataset.locations);\n  displayMap(locations);\n}\n\nif (loginForm) {\n  loginForm.addEventListener('submit', (e) => {\n    e.preventDefault(); // prevents the form from loading any other page\\\n    const email = document.getElementById('email').value;\n    const password = document.getElementById('password').value;\n    login(email, password);\n  });\n}\n\nif (logOutBtn) {\n  logOutBtn.addEventListener('click', logout);\n}\n\nif (userDataForm) {\n  userDataForm.addEventListener('submit', (e) => {\n    e.preventDefault();\n    const form = new FormData();\n    form.append('name', document.getElementById('name').value);\n    form.append('email', document.getElementById('email').value);\n    form.append('photo', document.getElementById('photo').files[0]);\n\n    updateSettings(form, 'data');\n  });\n}\n\nif (userPasswordForm) {\n  userPasswordForm.addEventListener('submit', async (e) => {\n    e.preventDefault();\n    document.querySelector('.btn--save-password').textContent = 'Updating...';\n\n    const passwordCurrent = document.getElementById('password-current').value;\n    const password = document.getElementById('password').value;\n    const passwordConfirm = document.getElementById('password-confirm').value;\n    await updateSettings(\n      { passwordCurrent, password, passwordConfirm },\n      'password',\n    );\n\n    document.querySelector('.btn--save-password').textContent = 'Save password';\n    document.getElementById('password-current').value = '';\n    document.getElementById('password').value = '';\n    document.getElementById('password-confirm').value = '';\n  });\n}\n\nif (bookBtn) {\n  bookBtn.addEventListener('click', (e) => {\n    e.target.textContent = 'Processing...';\n    const { tourId } = e.target.dataset; // e.target is the event that was clicked and triggers the event listener\n    bookTour(tourId);\n  });\n}\n"],
  "mappings": "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",
  "names": ["displayMap", "locations", "map", "bounds", "loc", "el", "hideAlert", "el", "showAlert", "type", "msg", "markup", "login", "email", "password", "showAlert", "err", "logout", "updateSettings", "data", "type", "url", "showAlert", "err", "bookTour", "tourId", "stripe", "session", "err", "showAlert", "mapBox", "loginForm", "logOutBtn", "userDataForm", "userPasswordForm", "bookBtn", "locations", "displayMap", "email", "password", "login", "logout", "form", "updateSettings", "passwordCurrent", "passwordConfirm", "tourId", "bookTour"]
}
